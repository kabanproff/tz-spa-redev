Пвивет! Понимаю что достал(но услышал что тупить джуну нормально).
Появилось сново ряд вопросов:
1) В antd в таблицу необходимо закидывать массив объектов пользователей, в которых по условию задания:
	a)лежит fullName -- можем взять при первом запросе(из firstName,lastName) c await в endpoints api/users либо api/users/full(в нем появлется доп.поле progress --массив с объектами в которых 2 поля (title,status))
		const { data } = await fetchWithBQ('users/full');
	b)дата старта createdAt --также есть при первом запросе;
	c)название модулей -- их можно получить только:
		беря data первого запроса map( проходимся по массиву и на каждый item.id делаем запрос fetch либо axios),
		полученый массив промисов закидываю в Promise.all:
			const arrayPromiseModulsId = await Promise.all(data.map(i => fetch(`usersModules/${i.id}`)))
		это получили массив с объектами в которых есть нужное нам поле module_id = integer(что означает что модуль может быть один), по которому только в следующем запросе 
		мы можем получить название и цвет модуля, но до этого нужно для каждого usera в объект сделать привязку(доп.поле) типа module_id: 1
		const usersAddModuleId = data.map(user => {
			const numberModule = arrayPromiseModulsId.find( i =>i?.data[0]?.user_id === user.id).data[0].module_id // ищем номер модуля
			const module = async () =>{
				try {
					const {data} = await axios(`modules/${numberModule})
					return data
				} catch (e) {
					console.error(e)
				}
			})
			return {
			...user,
			key: user.id, //нужен для уникальности поля, иначе warning 
			module: module() // добавляем наш объект модуль, хотя лучше наверно сделать по другому через Promise.all и заново перебрать по id
			}
		})

		и вот когда у нас есть полный набор данных мы их можем отобразить отправив в
		наш компонент через хук redax/toolkit:
		const { data: users, isLoading } = useGetUsersQuery()

		<Table columns={columns} dataSource={users} scroll={{ y: '56vh' }} />

		тут же есче вопросы появляются:
		1.Может лучше было сделать хок типа connect и выполнять эти вереборы объектов
			в нем, а не в query вызове toolkit.
			можно бало бы разделить все запросы по query названиям типа:
				useGetUsersFullQuery;
				useGetUsersQuery;
				useGetModulesQuery.
			и в хоке делать через них вызовы и переборы массива.
		2.Сохранить эти данные запросов в redux чтобы не делать новых запросов.

	Также столкнулся с проблемой изменения модуля у юзера:
	PUT​/api​/users​/{id}
	при {
  "login": "example@example.com",
  "password": 123123,
  "firstName": "Pavel", // меняется
  "lastName": "Guzu", // меняется
  "isAdmin": false,
  "instagram": "@pgutzu",
  "telegram": "@pgutzu",
  "moduleId": 1 // не меняется
}
	в респонс
	[1] --- типа всё гут - изменено, но при get запросе 
	GET​/api​/usersModules​/{id}
	лежит старый модуль! нового-изменённого нигде нет

	по другому изменять возможности нет!

	В модулес при изменении модуля  
	PUT​/api​/modules​/{id}

	{
  		"title": "Node" // на "HTML/CSS"
	}

	поменяется название модулей у всех пользователей по этому id модуля

